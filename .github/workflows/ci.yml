name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Build project
      run: npm run build

    - name: Check for build artifacts
      run: |
        if [ ! -d ".next" ]; then
          echo "Build failed - .next directory not found"
          exit 1
        fi
        echo "Build successful - .next directory exists"

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: |
        AUDIT_RESULT=$(npm audit --audit-level=high --json | jq '.metadata.vulnerabilities.total')
        if [ "$AUDIT_RESULT" -gt 0 ]; then
          echo "High severity vulnerabilities found: $AUDIT_RESULT"
          npm audit
          exit 1
        fi
        echo "No high severity vulnerabilities found"

  build-and-export:
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build and export
      run: |
        npm run build
        npm run export
      env:
        NODE_ENV: production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          .next/
          out/
        retention-days: 7

  performance:
    runs-on: ubuntu-latest
    needs: build-and-export

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files

    - name: Install Lighthouse
      run: npm install -g @lhci/cli@0.12.x

    - name: Start server and run Lighthouse
      run: |
        npm start &
        sleep 10
        lhci autorun --upload.target=temporary-public-storage || echo "Lighthouse CI completed with warnings"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  accessibility:
    runs-on: ubuntu-latest
    needs: build-and-export

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files

    - name: Install axe-core
      run: npm install -g @axe-core/cli

    - name: Start server and run accessibility tests
      run: |
        npm start &
        sleep 10
        axe http://localhost:3000 --exit || echo "Accessibility tests completed with warnings"
