@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600;700&display=swap")
layer(fonts);
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Support for dynamic viewport units */
:root {
    --vh: 1vh;
    --vw: 1vw;
}

/* Prevent flash of unstyled content */
html {
    visibility: hidden;
    opacity: 0;
    /* Prevent zoom on input focus for mobile */
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    text-size-adjust: 100%;
}

html.loaded {
    visibility: visible;
    opacity: 1;
    transition: opacity 0.2s ease-out;
}

:root {
    --terminal-bg: #0c0c0c;
    --terminal-border: #333;
    --terminal-header-bg: #1e1e1e;
    --terminal-green: #00ff00;
    --terminal-green-dim: #00cc00;
    --terminal-white: #ffffff;
    --terminal-gray: #cccccc;
    --terminal-blue: #61dafb;
    --terminal-yellow: #ffff00;
    --terminal-red: #ff4444;
    --terminal-purple: #b794f6;
    --terminal-orange: #ffa500;
    --prompt-color: var(--terminal-green);
    --command-color: var(--terminal-blue);
    --text-color: var(--terminal-gray);
    --highlight-bg: #333;
    --shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "JetBrains Mono", "Courier New", monospace;
    background:
        radial-gradient(ellipse at top, #2d2d2d 0%, #1a1a1a 50%),
        linear-gradient(135deg, #1a1a1a 0%, #0d0d0d 100%);
    color: var(--text-color);
    height: calc(var(--vh, 1vh) * 100);
    width: 100vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding: 60px 20px 20px 20px;
    line-height: 1.2;
    margin: 0;
    overflow: hidden;
    box-sizing: border-box;
    max-height: calc(var(--vh, 1vh) * 100);
    position: fixed;
    top: 0;
    left: 0;
}

.terminal {
    background: var(--terminal-bg);
    border: 2px solid var(--terminal-border);
    border-radius: 12px;
    box-shadow:
        0 0 40px rgba(0, 255, 0, 0.1),
        0 20px 60px rgba(0, 0, 0, 0.8),
        0 10px 30px rgba(0, 0, 0, 0.6),
        0 0 0 1px rgba(0, 255, 0, 0.1),
        inset 0 1px 0 rgba(255, 255, 255, 0.05);
    width: min(1200px, calc(100vw - 40px));
    height: min(700px, calc(var(--vh, 1vh) * 100 - 120px));
    max-width: 1200px;
    max-height: calc(var(--vh, 1vh) * 100 - 120px);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    opacity: 0;
    transform: scale(0.95) translateY(20px);
    animation: terminalStart 0.6s ease-out 0.1s forwards;
    position: relative;
    flex-shrink: 0;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    transition:
        transform 0.2s ease,
        box-shadow 0.2s ease;
    will-change: transform, opacity;
}

@keyframes terminalStart {
    from {
        opacity: 0;
        transform: scale(0.95) translateY(20px);
        box-shadow:
            0 0 20px rgba(0, 255, 0, 0.05),
            0 10px 30px rgba(0, 0, 0, 0.4);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
        box-shadow:
            0 0 40px rgba(0, 255, 0, 0.1),
            0 20px 60px rgba(0, 0, 0, 0.8),
            0 10px 30px rgba(0, 0, 0, 0.6),
            0 0 0 1px rgba(0, 255, 0, 0.1),
            inset 0 1px 0 rgba(255, 255, 255, 0.05);
    }
}

@media (hover: hover) and (pointer: fine) {
    .terminal:hover {
        transform: scale(1.005) translateY(-2px);
        box-shadow:
            0 0 40px rgba(0, 255, 0, 0.12),
            0 20px 60px rgba(0, 0, 0, 0.8),
            0 10px 30px rgba(0, 0, 0, 0.6),
            0 0 0 1px rgba(0, 255, 0, 0.12),
            inset 0 1px 0 rgba(255, 255, 255, 0.06);
    }
}

.terminal-header {
    background: var(--terminal-header-bg);
    padding: 12px 20px;
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    gap: 20px;
    border-bottom: 1px solid var(--terminal-border);
    flex-shrink: 0;
}

.terminal-controls {
    display: flex;
    gap: 8px;
}

.control {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    cursor: pointer;
    transition: opacity 0.2s ease;
}

@media (hover: hover) and (pointer: fine) {
    .control:hover {
        opacity: 0.8;
    }
}

.control.close {
    background: #ff5f57;
}

.control.minimize {
    background: #ffbd2e;
}

.control.maximize {
    background: #28ca42;
}

.terminal-title {
    text-align: center;
    font-weight: 500;
    color: var(--terminal-gray);
    font-size: 14px;
}

.language-switcher {
    display: flex;
    gap: 8px;
}

.lang-btn {
    background: transparent;
    border: 1px solid var(--terminal-border);
    color: var(--terminal-gray);
    padding: 4px 8px;
    border-radius: 4px;
    font-family: inherit;
    font-size: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
}

@media (hover: hover) and (pointer: fine) {
    .lang-btn:hover {
        border-color: var(--terminal-green);
        color: var(--terminal-green);
    }
}

.lang-btn.active {
    background: var(--terminal-green);
    color: var(--terminal-bg);
    border-color: var(--terminal-green);
}

.terminal-body {
    flex: 1;
    overflow: hidden;
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 20px;
    min-height: 0;
    max-height: 100%;
    width: 100%;
    position: relative;
}

/* Terminal output scrollbar styling */
.terminal-output::-webkit-scrollbar {
    width: 6px;
}

.terminal-output::-webkit-scrollbar-track {
    background: rgba(51, 51, 51, 0.3);
    border-radius: 3px;
}

.terminal-output::-webkit-scrollbar-thumb {
    background: var(--terminal-green);
    border-radius: 3px;
    opacity: 0.8;
}

@media (hover: hover) and (pointer: fine) {
    .terminal-output::-webkit-scrollbar-thumb:hover {
        background: var(--terminal-green-dim);
        opacity: 1;
    }
}

/* Scroll indicator */
.terminal-output-container {
    position: relative;
    flex: 1;
    margin-bottom: 10px;
    overflow: hidden;
    min-height: 0;
    max-height: 100%;
}

.terminal-output::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(
        to bottom,
        var(--terminal-green) 0%,
        transparent 10%,
        transparent 90%,
        var(--terminal-green) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

@media (hover: hover) and (pointer: fine) {
    .terminal-output:hover::after {
        opacity: 0.6;
    }
}

/* Scroll indicators */
.scroll-indicator {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.8);
    color: var(--terminal-green);
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    z-index: 10;
    animation: fadeInOut 2s ease-in-out;
    pointer-events: none;
}

.scroll-indicator-bottom {
    bottom: 10px;
}

.scroll-to-bottom-btn {
    position: absolute;
    bottom: 10px;
    right: 20px;
    background: var(--terminal-green);
    color: var(--terminal-bg);
    padding: 6px 12px;
    border-radius: 4px;
    font-size: 12px;
    cursor: pointer;
    z-index: 15;
    transition: all 0.2s ease;
    border: none;
    font-family: inherit;
}

@media (hover: hover) and (pointer: fine) {
    .scroll-to-bottom-btn:hover {
        background: var(--terminal-green-dim);
        transform: translateY(-1px);
    }
}

@keyframes fadeInOut {
    0%,
    100% {
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
}

.ascii-art {
    margin-bottom: 20px;
    text-align: center;
    flex-shrink: 0;
    height: 120px;
    overflow: hidden;
}

.ascii-text {
    color: var(--terminal-green);
    font-size: 10px;
    line-height: 1;
    font-weight: 600;
    text-shadow: 0 0 8px var(--terminal-green);
    will-change: text-shadow;
}

@media (prefers-reduced-motion: no-preference) {
    .ascii-text {
        animation: glow 3s ease-in-out infinite alternate;
    }
}

@keyframes glow {
    from {
        text-shadow: 0 0 5px var(--terminal-green);
    }
    to {
        text-shadow: 0 0 12px var(--terminal-green);
    }
}

.terminal-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
    min-height: 0;
    height: calc(100% - 140px);
    width: 100%;
    overflow: hidden;
}

.terminal-output {
    height: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    padding-right: 8px;
    scroll-behavior: smooth;
    width: 100%;
    box-sizing: border-box;
}

.terminal-line {
    margin-bottom: 2px;
    font-family: inherit;
    font-size: 14px;
    line-height: 1.4;
    white-space: pre-wrap;
    word-wrap: break-word;
    overflow: visible !important;
    max-width: 100%;
    box-sizing: border-box;
}

/* Ensure no scrollbars on individual lines or their children */
.terminal-line,
.terminal-line *,
.terminal-line span,
.terminal-line div {
    overflow: visible !important;
    max-width: none !important;
    width: auto !important;
}

.terminal-line::-webkit-scrollbar,
.terminal-line *::-webkit-scrollbar {
    display: none !important;
}

.terminal-line,
.terminal-line * {
    -ms-overflow-style: none !important;
    scrollbar-width: none !important;
}

.terminal-input-line {
    color: var(--prompt-color);
}

.terminal-line.terminal-output-line {
    color: var(--text-color);
}

.terminal-error {
    color: var(--terminal-red);
}

.terminal-system {
    color: var(--terminal-blue);
}

.terminal-input-container {
    flex-shrink: 0;
    width: 100%;
    height: 40px;
    max-height: 40px;
    overflow: hidden;
}

.terminal-input-form {
    width: 100%;
}

.terminal-prompt {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 8px;
    position: relative;
    cursor: text;
    width: 100%;
    overflow: hidden;
    align-items: center;
    /* Reset button styling */
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    text-align: left;
    outline: none;
}

.terminal-prompt:focus {
    outline: none;
}

.input-display {
    color: var(--command-color);
    font-family: inherit;
    font-size: 14px;
    line-height: 1.4;
    position: relative;
    white-space: pre;
    min-width: 0;
    overflow: hidden;
    grid-column: 2;
}

/* Hide input display scrollbar completely */
.input-display::-webkit-scrollbar {
    display: none;
}

.input-display {
    -ms-overflow-style: none;
    scrollbar-width: none;
}

.prompt-text {
    color: var(--prompt-color);
    font-weight: 500;
    white-space: nowrap;
    grid-column: 1;
}

.input-text {
    color: var(--command-color);
    font-family: inherit;
    font-size: 14px;
    line-height: 1.4;
    white-space: pre;
    display: inline-block;
    min-width: 0;
}

.terminal-input-hidden {
    position: absolute !important;
    left: -9999px !important;
    opacity: 0 !important;
    pointer-events: none !important;
}

.terminal-input-hidden:disabled {
    opacity: 0;
}

.cursor {
    color: var(--terminal-green);
    font-weight: 500;
    will-change: opacity;
}

.cursor-blink {
    color: var(--terminal-yellow);
    font-weight: 500;
    will-change: opacity;
}

@media (prefers-reduced-motion: no-preference) {
    .cursor {
        animation: blink 1s infinite;
    }

    .cursor-blink {
        animation: blink 0.5s infinite;
    }
}

@keyframes blink {
    0%,
    50% {
        opacity: 1;
    }
    51%,
    100% {
        opacity: 0;
    }
}

.processing-indicator {
    display: flex;
    align-items: center;
    gap: 4px;
    color: var(--terminal-yellow);
}

/* Content styling */
.terminal-line a {
    color: var(--terminal-blue);
    text-decoration: underline;
    cursor: pointer;
}

@media (hover: hover) and (pointer: fine) {
    .terminal-line a:hover {
        color: var(--terminal-green);
    }
}

/* Download buttons */
.download-btn {
    background: transparent;
    border: 1px solid var(--terminal-green);
    color: var(--terminal-green);
    padding: 8px 16px;
    border-radius: 4px;
    font-family: inherit;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.2s ease;
    margin: 4px 8px 4px 0;
    display: inline-block;
    text-decoration: none;
}

@media (hover: hover) and (pointer: fine) {
    .download-btn:hover {
        background: var(--terminal-green);
        color: var(--terminal-bg);
    }
}

/* Responsive design */
@media (max-width: 768px) {
    :root {
        --mobile-padding: 10px;
    }

    body {
        padding: var(--mobile-padding);
        height: calc(var(--vh, 1vh) * 100);
        max-height: calc(var(--vh, 1vh) * 100);
        position: fixed;
        width: 100%;
        overflow: hidden;
    }

    .terminal {
        width: calc(100vw - calc(var(--mobile-padding) * 2));
        height: calc(var(--vh, 1vh) * 100 - calc(var(--mobile-padding) * 2));
        max-width: calc(100vw - calc(var(--mobile-padding) * 2));
        max-height: calc(
            var(--vh, 1vh) * 100 - calc(var(--mobile-padding) * 2)
        );
        position: relative;
        box-shadow:
            0 0 30px rgba(0, 255, 0, 0.08),
            0 15px 40px rgba(0, 0, 0, 0.7),
            0 8px 20px rgba(0, 0, 0, 0.5),
            0 0 0 1px rgba(0, 255, 0, 0.08);
    }

    .terminal-header {
        padding: 8px 15px;
        gap: 10px;
        flex-shrink: 0;
    }

    .terminal-title {
        font-size: 12px;
    }

    .terminal-body {
        padding: 15px;
        flex: 1;
        min-height: 0;
        overflow: hidden;
    }

    .ascii-art {
        height: 80px;
        margin-bottom: 10px;
    }

    .ascii-text {
        font-size: 8px;
    }

    .terminal-line,
    .terminal-input {
        font-size: 13px;
    }

    /* Hide virtual keyboard handling */
    .terminal-input-hidden {
        position: absolute !important;
        left: -9999px !important;
        opacity: 0 !important;
        pointer-events: none !important;
        font-size: 16px !important; /* Prevent zoom on iOS */
        transform: scale(0);
    }
}

@media (max-width: 480px) {
    :root {
        --mobile-padding: 5px;
    }

    body {
        padding: var(--mobile-padding);
        height: calc(var(--vh, 1vh) * 100);
        max-height: calc(var(--vh, 1vh) * 100);
        position: fixed;
        width: 100%;
        overflow: hidden;
    }

    .terminal {
        width: calc(100vw - calc(var(--mobile-padding) * 2));
        height: calc(var(--vh, 1vh) * 100 - calc(var(--mobile-padding) * 2));
        max-width: calc(100vw - calc(var(--mobile-padding) * 2));
        max-height: calc(
            var(--vh, 1vh) * 100 - calc(var(--mobile-padding) * 2)
        );
        border-radius: 8px;
        position: relative;
        box-shadow:
            0 0 20px rgba(0, 255, 0, 0.06),
            0 10px 30px rgba(0, 0, 0, 0.6),
            0 5px 15px rgba(0, 0, 0, 0.4),
            0 0 0 1px rgba(0, 255, 0, 0.06);
    }

    .terminal-header {
        padding: 6px 10px;
        gap: 8px;
        flex-shrink: 0;
    }

    .terminal-body {
        padding: 10px;
        gap: 10px;
        flex: 1;
        min-height: 0;
        overflow: hidden;
    }

    .ascii-art {
        height: 60px;
        margin-bottom: 8px;
    }

    .ascii-text {
        font-size: 6px;
    }

    .terminal-line,
    .terminal-input {
        font-size: 12px;
    }

    .lang-btn {
        font-size: 11px;
        padding: 3px 6px;
    }

    /* Optimize for small screens */
    .terminal-content {
        height: calc(100% - 70px);
        gap: 5px;
    }

    .terminal-output {
        padding-right: 4px;
    }

    /* Prevent zoom and optimize input handling */
    .terminal-input-hidden {
        position: absolute !important;
        left: -9999px !important;
        opacity: 0 !important;
        pointer-events: none !important;
        font-size: 16px !important; /* Prevent zoom on iOS */
        transform: scale(0);
        -webkit-user-select: none;
        user-select: none;
    }
}

/* Landscape orientation optimizations for mobile */
@media (max-width: 768px) and (orientation: landscape) {
    body {
        padding: 5px;
    }

    .terminal {
        width: calc(100vw - 10px);
        height: calc(var(--vh, 1vh) * 100 - 10px);
        max-height: calc(var(--vh, 1vh) * 100 - 10px);
    }

    .terminal-body {
        padding: 8px;
    }

    .ascii-art {
        height: 40px;
        margin-bottom: 5px;
    }

    .ascii-text {
        font-size: 5px;
    }
}

/* Loading animation */
.loading {
    display: inline-block;
    width: 12px;
    height: 12px;
    border: 2px solid var(--terminal-border);
    border-radius: 50%;
    border-top-color: var(--terminal-green);
    animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* Accessibility and Performance */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }

    .terminal {
        transform: none !important;
        animation: none !important;
    }

    .ascii-text {
        animation: none !important;
        text-shadow: 0 0 8px var(--terminal-green) !important;
    }
}

/* Performance optimizations */
.terminal,
.terminal-output,
.terminal-input,
.clickable-command {
    contain: layout style paint;
}

.terminal-line {
    contain: layout style;
}

/* Focus styles */
.terminal-input:focus,
.lang-btn:focus,
.download-btn:focus {
    outline: 2px solid var(--terminal-green);
    outline-offset: 2px;
}

/* Selection styles */
::selection {
    background: var(--terminal-green);
    color: var(--terminal-bg);
}

/* Clickable commands */
.clickable-command {
    color: var(--terminal-blue) !important;
    cursor: pointer !important;
    text-decoration: underline !important;
    transition: all 0.2s ease !important;
    display: inline !important;
    font-weight: 500 !important;
    position: relative !important;
}

@media (hover: hover) and (pointer: fine) {
    .clickable-command:hover {
        color: var(--terminal-green) !important;
        text-shadow: 0 0 8px var(--terminal-green) !important;
    }
}

.clickable-command:active {
    color: var(--terminal-yellow) !important;
    text-shadow: 0 0 10px var(--terminal-yellow) !important;
}

/* Add a subtle glow effect for clickable commands */
.clickable-command::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: rgba(97, 218, 251, 0.1);
    border-radius: 2px;
    opacity: 0;
    transition: opacity 0.2s ease;
    pointer-events: none;
    z-index: -1;
}

@media (hover: hover) and (pointer: fine) {
    .clickable-command:hover::before {
        opacity: 1;
    }
}

/* Make sure the terminal loads properly */
.terminal.loaded {
    opacity: 1;
    transform: scale(1);
}

/* Mobile-specific optimizations */
@media (max-width: 768px) {
    /* Prevent body scroll when keyboard is open */
    body.keyboard-open {
        position: fixed;
        overflow: hidden;
        height: calc(var(--vh, 1vh) * 100);
        width: 100%;
        top: 0;
        left: 0;
    }

    /* Ensure terminal stays in view when keyboard opens */
    .terminal.keyboard-open {
        height: calc(var(--vh, 1vh) * 100 - 20px);
        max-height: calc(var(--vh, 1vh) * 100 - 20px);
        position: relative;
        overflow: hidden;
        transform: translateY(0);
        animation: none;
    }

    /* Optimize terminal body for keyboard mode */
    .terminal-body.keyboard-open {
        padding: 5px;
        overflow: hidden;
        height: calc(100% - 50px);
    }

    .terminal-content.keyboard-open {
        height: calc(100% - 40px);
        overflow: hidden;
    }

    .ascii-art.keyboard-open {
        display: none; /* Hide ASCII art when keyboard is open to save space */
    }

    /* Mobile input container optimizations */
    .terminal-input-container.mobile-keyboard-open {
        position: sticky;
        bottom: 0;
        background: var(--terminal-bg);
        border-top: 1px solid var(--terminal-border);
        padding: 5px 0;
        z-index: 10;
    }

    /* Mobile input handling */
    .terminal-input-hidden {
        position: absolute !important;
        left: -9999px !important;
        opacity: 0 !important;
        pointer-events: none !important;
        font-size: 16px !important;
        transform: scale(0);
        -webkit-user-select: none;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: transparent;
        user-select: none;
    }
}

/* iOS Safari specific fixes */
@supports (-webkit-touch-callout: none) {
    /* iOS Safari */
    .terminal-input-hidden {
        -webkit-user-select: none;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: transparent;
    }

    /* Prevent rubber band scrolling */
    body {
        overscroll-behavior: none;
        -webkit-overflow-scrolling: touch;
        touch-action: manipulation;
    }

    /* iOS keyboard handling */
    body.keyboard-open {
        position: fixed;
        overflow: hidden;
        -webkit-overflow-scrolling: auto;
    }

    /* Prevent zoom on input focus */
    input,
    textarea,
    select {
        font-size: 16px !important;
        -webkit-text-size-adjust: 100%;
        -webkit-appearance: none;
        border-radius: 0;
        outline: none;
        -webkit-tap-highlight-color: transparent;
    }
}

/* Android specific fixes */
@media screen and (max-width: 768px) and (min-resolution: 96dpi) {
    /* Android Chrome viewport fix */
    body {
        min-height: calc(var(--vh, 1vh) * 100);
        max-height: calc(var(--vh, 1vh) * 100);
    }

    /* Android keyboard handling */
    body.keyboard-open {
        height: calc(var(--vh, 1vh) * 100);
        overflow: hidden;
    }

    .terminal.keyboard-open {
        position: relative;
        overflow: hidden;
    }

    /* Android input optimizations */
    .terminal-input-hidden:focus {
        outline: none;
        border: none;
        -webkit-appearance: none;
    }
}
